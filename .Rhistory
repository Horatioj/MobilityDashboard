shiny::runApp()
runApp()
dy.df <- read.csv("dc_miresults.csv")
unique_communities <- unique(dy.df$Community)
com.mi.df <- data.frame(Community = unique_communities,
MI = numeric(length(unique_communities)))
View(com.mi.df)
com.mi.df <- data.frame(Community = unique_communities,
MI = numeric(length(unique_communities)))
# Loop over unique communities
for (i in seq_along(unique_communities)) {
community <- unique_communities[i]
community_mi_values <- numeric()
# Loop over modes for calculating the mobility index of each community
for (mode in c("drive", "bicycle", "walk", "transit")) {
current_time <- switch(mode,
"drive" = time.drive,
"transit" = time.transit,
"walk" = time.walk,
"bicycle" = time.bicycle)
# Filter the dataframe based on conditions
result <- dy.df[dy.df$Community == community &
dy.df$Mode == mode &
dy.df$Time.Range == current_time, "MI"]
# Append the MI values to the vector
community_mi_values <- c(community_mi_values, result)
}
# Calculate and store the mean MI value for the current community
com.mi.df$MI[i] <- mean(community_mi_values)
}
time.drive <- 10
time.bicycle <- 10
time.transit <- 10
time.walk <- 10
com.mi.df <- data.frame(Community = unique_communities,
MI = numeric(length(unique_communities)))
# Loop over unique communities
for (i in seq_along(unique_communities)) {
community <- unique_communities[i]
community_mi_values <- numeric()
# Loop over modes for calculating the mobility index of each community
for (mode in c("drive", "bicycle", "walk", "transit")) {
current_time <- switch(mode,
"drive" = time.drive,
"transit" = time.transit,
"walk" = time.walk,
"bicycle" = time.bicycle)
# Filter the dataframe based on conditions
result <- dy.df[dy.df$Community == community &
dy.df$Mode == mode &
dy.df$Time.Range == current_time, "MI"]
# Append the MI values to the vector
community_mi_values <- c(community_mi_values, result)
}
# Calculate and store the mean MI value for the current community
com.mi.df$MI[i] <- mean(community_mi_values)
}
View(com.mi.df)
for (i in seq_along(unique_communities)) {
community <- unique_communities[i]
community_mi_values <- numeric()
# Loop over modes for calculating the mobility index of each community
for (mode in c("drive", "bicycle", "walk", "transit")) {
current_time <- switch(mode,
"drive" = time.drive,
"transit" = time.transit,
"walk" = time.walk,
"bicycle" = time.bicycle)
# Filter the dataframe based on conditions
result <- dy.df[dy.df$Community == community &
dy.df$Mode == mode &
dy.df$Time.Range == current_time, "MI"]
# Append the MI values to the vector
community_mi_values <- c(community_mi_values, result)
}
# Calculate and store the mean MI value for the current community
com.mi.df$MI[i] <- sum(community_mi_values)
}
View(com.mi.df)
?selectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addLegend
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
